(()=>{"use strict";var e,t={1959:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(9416),a=r(n(8197)),i=r(n(9755)),s=o.browser.runtime.getManifest();i.default("#version")[0].innerText=`Version ${s.version}`;const l={about:"/pages/about.html",tabs:"/pages/tabs.html",settings:"/pages/settings.html"};let u,f;i.default(".sidebar").find("a").toArray().forEach((function(e){e.onclick=function(){u.classList.remove("active"),e.classList.add("active"),u=e,f.style.zIndex="0";const t=i.default(`div.${e.getAttribute("tag")}`)[0];t.style.zIndex="1",i.default(f).find(".simplebar-content-wrapper")[0].scrollTop=0,f=t}}));for(const[e,t]of Object.entries(l)){const t=i.default(`.${e}`)[0];new a.default(t,{autoHide:!1}),i.default(t).find(".content-main").load(l[e])}u=i.default("#default-tab")[0],u.classList.add("active"),f=i.default("#default-content")[0],f.style.zIndex="1"}},n={};function r(e){var o=n[e];if(void 0!==o)return o.exports;var a=n[e]={exports:{}};return t[e].call(a.exports,a,a.exports,r),a.exports}r.m=t,e=[],r.O=(t,n,o,a)=>{if(!n){var i=1/0;for(u=0;u<e.length;u++){for(var[n,o,a]=e[u],s=!0,l=0;l<n.length;l++)(!1&a||i>=a)&&Object.keys(r.O).every((e=>r.O[e](n[l])))?n.splice(l--,1):(s=!1,a<i&&(i=a));s&&(e.splice(u--,1),t=o())}return t}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[n,o,a]},r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.j=635,(()=>{var e={635:0};r.O.j=t=>0===e[t];var t=(t,n)=>{var o,a,[i,s,l]=n,u=0;for(o in s)r.o(s,o)&&(r.m[o]=s[o]);if(l)var f=l(r);for(t&&t(n);u<i.length;u++)a=i[u],r.o(e,a)&&e[a]&&e[a][0](),e[i[u]]=0;return r.O(f)},n=self.webpackChunkextension=self.webpackChunkextension||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var o=r.O(void 0,[736],(()=>r(1959)));o=r.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,