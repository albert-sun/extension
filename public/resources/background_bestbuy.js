(()=>{"use strict";var e,a={770:(e,a,t)=>{t.d(a,{Z:()=>E});var s=t(234),r=t(655),o=t(568);function d(e){const a=e.split("-"),t=a.map((e=>parseInt(e,16)));return 1e3*parseInt(a[2]+a[3],16)/t[1]}function i(e,a=!1){let t=!1;e<0&&(e*=-1,t=!0);const s=e/1e3;let r=Math.floor(s/60),o=s%60;return!0===a&&(r=Math.floor(r),o=Math.floor(o)),[r,o,t]}var c=t(261);(0,c.fZ)([]);const n="background",G={bestbuy:{autoAddQueue:!0,retryQueue:!0,queueNotification:!0,queueSuccess:!0,retryTimeout:15e3}},T=Object.entries({"gtx-16":{display:"[Graphics] GeForce GTX 16-Series",items:[{display:"ASUS GeForce GTX 1660 SUPER TUF GAMING OC",data:"6405063"},{display:"EVGA GeForce GTX 1650 SUPER SUPER SC ULTRA GAMING",data:"6412939"},{display:"EVGA GeForce GTX 1660Ti SC ULTRA GAMING",data:"6373500"},{display:"MSI GeForce GTX 1650 SUPER GAMING X",data:"6397798"},{display:"MSI GeForce GTX 1660 SUPER GAMING X",data:"6389333"},{display:"MSI GeForce GTX 1660Ti GAMING X",data:"6330461"},{display:"PNY GeForce GTX 1650 SUPER XLR8 GAMING OC",data:"6407305"},{display:"PNY GeForce GTX 1660 SUPER XLR8 GAMING OC",data:"6407309"}]},"rtx-3060":{display:"[Graphics] GeForce RTX 3060",items:[{display:"ASUS GeForce RTX 3060 STRIX",data:"6460665"},{display:"ASUS GeForce RTX 3060 STRIX (LHR)",data:"6475224"},{display:"ASUS GeForce RTX 3060 TUF GAMING",data:"6460666"},{display:"ASUS GeForce RTX 3060 TUF GAMING (LHR)",data:"6475223"},{display:"EVGA GeForce RTX 3060 XC GAMING (KB)",data:"6454329"},{display:"EVGA GeForce RTX 3060 XC GAMING (KR)",data:"6454328"},{display:"GIGABYTE GeForce RTX 3060 AORUS ELITE",data:"6468910"},{display:"GIGABYTE GeForce RTX 3060 EAGLE OC",data:"6454689"},{display:"GIGABYTE GeForce RTX 3060 EAGLE OC (LHR)",data:"6468928"},{display:"GIGABYTE GeForce RTX 3060 GAMING OC",data:"6454688"},{display:"GIGABYTE GeForce RTX 3060 GAMING OC (LHR)",data:"6468931"},{display:"GIGABYTE GeForce RTX 3060 VISION OC",data:"6468925"},{display:"MSI GeForce RTX 3060 GAMING X OC",data:"6476229"},{display:"MSI GeForce RTX 3060 VENTUS 2X OC",data:"6462173"},{display:"MSI GeForce RTX 3060 VENTUS 3X OC",data:"6452940"},{display:"PNY GeForce RTX 3060 XLR8 GAMING REVEL EPIC-X",data:"6454318"}]},"rtx-3060ti":{display:"[Graphics] GeForce RTX 3060Ti",items:[{display:"ASUS GeForce RTX 3060Ti TUF GAMING",data:"6475237"},{display:"ASUS GeForce RTX 3060Ti TUF GAMING",data:"6452573"},{display:"EVGA GeForce RTX 3060Ti FTW3 GAMING (KB)",data:"6444444"},{display:"EVGA GeForce RTX 3060Ti FTW3 GAMING (KH, LHR)",data:"6479524"},{display:"GIGABYTE GeForce RTX 3060Ti AORUS EAGLE (LHR)",data:"6479686"},{display:"GIGABYTE GeForce RTX 3060Ti EAGLE OC",data:"6442485"},{display:"GIGABYTE GeForce RTX 3060Ti EAGLE OC (LHR)",data:"6471951"},{display:"GIGABYTE GeForce RTX 3060Ti GAMING OC",data:"6471952"},{display:"GIGABYTE GeForce RTX 3060Ti GAMING OC (LHR)",data:"6479688"},{display:"GIGABYTE GeForce RTX 3060Ti GAMING OC (LHR V2)",data:"6442484"},{display:"MSI GeForce RTX 3060Ti GAMING X",data:"6480291"},{display:"MSI GeForce RTX 3060Ti GAMING Z",data:"6476230"},{display:"MSI GeForce RTX 3060Ti VENTUS 2X OC",data:"6441172"},{display:"MSI GeForce RTX 3060Ti VENTUS 2X OC (LHR)",data:"6471286"},{display:"MSI GeForce RTX 3060Ti VENTUS 3X OC",data:"6480307"},{display:"NVIDIA GeForce RTX 3060Ti FOUNDERS",data:"6439402"}]},"rtx-3070":{display:"[Graphics] GeForce RTX 3070",items:[{display:"ASUS GeForce RTX 3070 STRIX",data:"6439127"},{display:"ASUS GeForce RTX 3070 STRIX (LHR)",data:"6475228"},{display:"ASUS GeForce RTX 3070 TUF GAMING",data:"6439128"},{display:"ASUS GeForce RTX 3070 TUF GAMING (LHR)",data:"6475226"},{display:"EVGA GeForce RTX 3070 XC3 ULTRA GAMING (KL, LHR)",data:"6479528"},{display:"EVGA GeForce RTX 3070 XC3 ULTRA GAMING (KH, LHR)",data:"6477077"},{display:"EVGA GeForce RTX 3070 XC3 ULTRA GAMING (KB)",data:"6439299"},{display:"GIGABYTE GeForce RTX 3070 AORUS MASTER",data:"6439384"},{display:"GIGABYTE GeForce RTX 3070 AORUS MASTER (LHR)",data:"6479685"},{display:"GIGABYTE GeForce RTX 3070 EAGLE",data:"6437912"},{display:"GIGABYTE GeForce RTX 3070 EAGLE OC (LHR)",data:"6471958"},{display:"GIGABYTE GeForce RTX 3070 GAMING OC",data:"6437909"},{display:"GIGABYTE GeForce RTX 3070 VISION OC",data:"6439385"},{display:"MSI GeForce RTX 3070 GAMING Z TRIO",data:"6471285"},{display:"MSI GeForce RTX 3070 VENTUS 2X OC",data:"6462266"},{display:"MSI GeForce RTX 3070 VENTUS 2X OC (LHR)",data:"6480308"},{display:"MSI GeForce RTX 3070 VENTUS 3X OC",data:"6438278"},{display:"MSI GeForce RTX 3070 GAMING X TRIO",data:"6438279"},{display:"NVIDIA GeForce RTX 3070 FOUNDERS",data:"6429442"}]},"rtx-3070ti":{display:"[Graphics] GeForce RTX 3070Ti",items:[{display:"ASUS GeForce RTX 3070Ti STRIX",data:"6467838"},{display:"ASUS GeForce RTX 3070Ti TUF GAMING",data:"6467840"},{display:"GIGABYTE GeForce RTX 3070Ti AORUS MASTER",data:"6467788"},{display:"GIGABYTE GeForce RTX 3070Ti GAMING OC",data:"6467779"},{display:"GIGABYTE GeForce RTX 3070Ti EAGLE",data:"6467782"},{display:"GIGABYTE GeForce RTX 3070Ti EAGLE OC",data:"6467781"},{display:"GIGABYTE GeForce RTX 3070Ti VISION OC",data:"6467785"},{display:"MSI GeForce RTX 3070Ti GAMING X TRIO",data:"6467497"},{display:"MSI GeForce RTX 3070Ti VENTUS 3X OC",data:"6467500"},{display:"NVIDIA GeForce RTX 3070Ti FOUNDERS",data:"6465789"}]},"rtx-3080":{display:"[Graphics] GeForce RTX 3080",items:[{display:"ASUS GeForce RTX 3080 STRIX",data:"6432445"},{display:"ASUS GeForce RTX 3080 STRIX (LHR)",data:"6475238"},{display:"EVGA GeForce RTX 3080 XC3 ULTRA GAMING (KB)",data:"6432400"},{display:"EVGA GeForce RTX 3080 XC3 ULTRA GAMING (KH, LHR)",data:"6471615"},{display:"GIGABYTE GeForce RTX 3080 AORUS MASTER (LHR)",data:"6462198"},{display:"GIGABYTE GeForce RTX 3080 AORUS XTREME",data:"6436223"},{display:"GIGABYTE GeForce RTX 3080 AORUS XTREME (LHR)",data:"6471954"},{display:"GIGABYTE GeForce RTX 3080 EAGLE OC",data:"6430621"},{display:"GIGABYTE GeForce RTX 3080 GAMING OC",data:"6430620"},{display:"GIGABYTE GeForce RTX 3080 GAMING OC (LHR)",data:"6471960"},{display:"GIGABYTE GeForce RTX 3080 VISION OC",data:"6436219"},{display:"GIGABYTE GeForce RTX 3080 VISION OC (LHR)",data:"6471957"},{display:"MSI GeForce RTX 3080 GAMING Z TRIO",data:"6480289"},{display:"MSI GeForce RTX 3080 VENTUS 3X (LHR)",data:"6471287"},{display:"MSI GeForce RTX 3080 VENTUS 3X OC",data:"6430175"},{display:"MSI GeForce RTX 3080 VENTUS 3X PLUS (LHR)",data:"6480306"},{display:"NVIDIA GeForce RTX 3080 FOUNDERS",data:"6429440"}]},"rtx-3080ti":{display:"[Graphics] GeForce RTX 3080Ti",items:[{display:"ASUS GeForce RTX 3080Ti STRIX",data:"6466931"},{display:"ASUS GeForce RTX 3080Ti TUF GAMING",data:"6466932"},{display:"EVGA GeForce RTX 3080Ti FTW3 ULTRA GAMING (KB)",data:"6467808"},{display:"GIGABYTE GeForce RTX 3080Ti AORUS MASTER",data:"6468932"},{display:"GIGABYTE GeForce RTX 3080Ti AORUS XTREME",data:"6468933"},{display:"GIGABYTE GeForce RTX 3080Ti GAMING OC",data:"6466561"},{display:"GIGABYTE GeForce RTX 3080Ti VISION OC",data:"6466564"},{display:"MSI GeForce RTX 3080Ti GAMING X TRIO",data:"6465803"},{display:"MSI GeForce RTX 3080Ti VENTUS 3X OC",data:"6472637"},{display:"NVIDIA GeForce RTX 3080Ti FOUNDERS",data:"6462956"},{display:"PNY GeForce RTX 3080Ti XLR8 GAMING REVEL EPIC-X",data:"6467289"}]},"rtx-3090":{display:"[Graphics] GeForce RTX 3090",items:[{display:"ASUS GeForce RTX 3090 STRIX",data:"6432447"},{display:"ASUS GeForce RTX 3090 TUF GAMING",data:"6432446"},{display:"EVGA GeForce RTX 3090 XC3 ULTRA GAMING (KB)",data:"6434198"},{display:"GIGABYTE GeForce RTX 3090 AORUS MASTER",data:"6437910"},{display:"GIGABYTE GeForce RTX 3090 EAGLE OC",data:"6430624"},{display:"GIGABYTE GeForce RTX 3090 GAMING OC",data:"6430623"},{display:"GIGABYTE GeForce RTX 3090 VISION OC",data:"6445108"},{display:"MSI GeForce RTX 3090 GAMING X TRIO",data:"6468863"},{display:"MSI GeForce RTX 3090 VENTUS 3X OC",data:"SKU: 6472646"},{display:"MSI GeForce RTX 3090 VENTUS 3X OC (?)",data:"6430215"},{display:"NVIDIA GeForce RTX 3090 FOUNDERS",data:"6429434"}]}}).reduce(((e,[a,t])=>Object.assign(Object.assign({},e),Object.entries(t.items).reduce(((e,[a,t])=>(e[t.data]=t.display,e)),{}))),{});function u(e,a,t="info"){const s=`[${(new Date).toLocaleTimeString("en-GB",{hour:"2-digit",minute:"2-digit",second:"2-digit"}).substring(0,8)}]\t\t(${e})\t\t${a}`;"info"===t?console.log(s):"debug"===t?console.debug(s):"warn"===t?console.warn(s):"error"===t&&console.error(s)}async function l(e,a,t){const s=await async function(e,a){const t=await browser.storage.local.get(e);return void 0===t[e]&&(t[e]=a),t[e]}(a,t),r=(0,c.fZ)(s);return browser.runtime.onMessage.addListener((async(e,t)=>{const s=e;if("update-set"===s.handler){const[e,t,o]=s.args;e===a&&r.update((e=>(e[t]=o,e)))}else if("update-delete"===s.handler){const[e,t]=s.args;e===a&&r.update((e=>(delete e[t],e)))}})),{store:r,set:(t,s)=>{r.update((e=>(e[t]=s,e))),browser.storage.local.set({[a]:(0,c.U2)(r)}),p(e,"update-set",[a,t,s])},del:t=>{r.update((e=>(delete e[t],e))),browser.storage.local.set({[a]:(0,c.U2)(r)}),p(e,"update-del",[a,t])}}}async function p(e,a,t=[]){const s={sender:e,handler:a,args:t};return await browser.runtime.sendMessage(s)}const R={bestbuy:"https://*.bestbuy.com/*"};async function y(e,a,t,s=[]){const r={sender:e,handler:t,args:s};let o={status:"error",payload:"tab not found (shouldn't happen)"};const d=await browser.tabs.query({url:R[a],discarded:!1,status:"complete"});return d.length>0&&(o=await browser.tabs.sendMessage(d[0].id,r)),o}function I(e,a,t){browser.runtime.onMessage.addListener((async(s,r)=>{const o=s;let d={status:"success",payload:void 0};if(t.includes(o.sender)){const t=a[o.handler];if(void 0!==t){u(e,`Processing handler ${o.handler} from ${o.sender} with arguments ${JSON.stringify(o.args)}`);try{const e=await t(...o.args||[]);d.status="success",d.payload=e}catch(a){const t=a.message;d.status="error",d.payload=t,u(e,`Error processing handler ${o.handler}: ${t}`,"error")}}}return d}))}t(434),t(374),e=t.hmd(e);const{Object:A}=s.lig;function X(e){const a={c:s.ZTd,l:function(e){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:s.ZTd,p:s.ZTd,i:s.ZTd,o:s.ZTd,d:s.ZTd};return(0,s.YyZ)("SvelteRegisterBlock",{block:a,id:X.name,type:"component",source:"",ctx:e}),a}function S(e,a,t){let c,p,R=s.ZTd,X=()=>(R(),R=(0,s.LdU)(M,(e=>t(4,c=e))),M),S=s.ZTd,F=()=>(S(),S=(0,s.LdU)(U,(e=>t(5,p=e))),U);e.$$.on_destroy.push((()=>R())),e.$$.on_destroy.push((()=>S()));let{$$slots:E={},$$scope:b}=a;(0,s.KXV)("BestBuy",E,[]);const f=n;let O,M,N,U;function g(...e){return(0,r.mG)(this,void 0,void 0,(function*(){const[a]=e;if(!0===p.bestbuy.showNotification){const e=T[a];browser.notifications.create({type:"basic",title:"Best Buy - Successfully Carted!",message:e,iconUrl:"../resources/icon_512.png"})}yield O.play()}))}(0,o.H3)((function(){return(0,r.mG)(this,void 0,void 0,(function*(){O=new Audio("../resources/notification_success.mp3"),X(t(0,({store:M,set:N}=yield l(f,"queues",{})),M)),F(t(1,({store:U}=yield l(f,"settings",G)),U));let e=0;for(const[a,t]of Object.entries(c))e+=Object.keys(t).length;u("background-bestbuy",`Startup routine, retrieved and tracking ${e} existing queues from storage`),I("background",{"successful-cart":g,"get-bestbuy-product_queues"(){return(0,r.mG)(this,void 0,void 0,(function*(){return c}))},"merge-bestbuy-product_queues"(e){return(0,r.mG)(this,void 0,void 0,(function*(){const a=(new Date).getTime();for(const[t,s]of Object.entries(e))if(void 0===(c[t]||{})[s[1]]){const[e,r,o]=s,i=d(s[1]);if(e+i-a>-3e5){const a={startTime:e,a2cTransactionReferenceId:r,a2cTransactionCode:o,queueTime:i},s=c[t]||{};s[r]=a,N(t,s)}}}))}},["extension"]);let a={};setInterval((function(){return(0,r.mG)(this,void 0,void 0,(function*(){const e=(new Date).getTime();for(const[t,s]of Object.entries(c))for(const[r,o]of Object.entries(s)){const d=a[o.a2cTransactionReferenceId];if(void 0!==d&&e-d<p.bestbuy.retryTimeout)continue;const i=o.startTime+o.queueTime-e;if(i<=0)if(i>-3e5)if(!0===p.bestbuy.autoAddQueue){u("background-bestbuy",`Queue popped for SKU ${t}, broadcasting add-to-cart request`);const d=yield y(f,"bestbuy","process-atc",[t,o]);200===d.payload?(u("background-bestbuy",`Successfully added SKU ${t} to cart`),yield g(t),delete s[r],N(t,s)):"error"===d.status?u("background-bestbuy",`Error adding SKU ${t} to cart: ${d.payload}`):(u("background-bestbuy",`Failed to add SKU ${t} to cart: status ${d.payload}`),!0===p.bestbuy.retryQueue?a[o.a2cTransactionReferenceId]=e:(delete s[r],N(t,s)))}else u("background-bestbuy",`Queue popped for SKU ${t}, waiting for manual because of setting`);else u("background-bestbuy",`Queue popped but expired for ${t}, silently deleting`),delete s[r],N(t,s)}}))}),5e3);const s={};chrome.webRequest.onBeforeRequest.addListener((function(e){if(void 0!==e.requestBody){const a=decodeURIComponent(String.fromCharCode.apply(null,new Uint8Array(e.requestBody.raw[0].bytes))),t=JSON.parse(a);s[e.requestId]=t;const r=t.items.map((e=>e.skuId)),o=JSON.stringify(r);u("background-bestbuy",`[webRequest.onBeforeRequest] Finished caching POST body for request ${e.requestId} with SKU(s) ${o}`,"debug")}}),{urls:["*://*.bestbuy.com/cart/api/v1/addToCart"]},["requestBody","blocking"]),chrome.webRequest.onBeforeSendHeaders.addListener((function(e){void 0!==s[e.requestId]||u("background-bestbuy",`[webRequest.onBeforeSendHeaders] Couldn't find cached POST body for request ${e.requestId}`,"error")}),{urls:["*://*.bestbuy.com/cart/api/v1/addToCart"]},["requestHeaders","blocking"]),chrome.webRequest.onHeadersReceived.addListener((function(e){var a;let t="",r="";for(const a of e.responseHeaders||[])"a2ctransactionreferenceid"===a.name?t=a.value:"a2ctransactioncode"===a.name&&(r=a.value);if((200!==e.statusCode||!0===p.bestbuy.queueSuccess)&&""!==t&&""!==r){const o=s[e.requestId];if(void 0===o)return void u("background-bestbuy",`[webRequest.onHeadersReceived] Couldn't find cached POST body for request ${e.requestId}`,"error");const n=null===(a=o.items[0])||void 0===a?void 0:a.skuId,G=(new Date).getTime(),T=d(r),[l,p]=i(T),R={startTime:G,a2cTransactionReferenceId:t,a2cTransactionCode:r,queueTime:T},y=c[n]||{};y[t]=R,N(n,y),u("background-bestbuy",`[webRequest.onHeadersReceived] Queue response headers detected for request ${e.requestId} with time ${l}m ${p}s`)}delete s[e.requestId]}),{urls:["*://*.bestbuy.com/cart/api/v1/addToCart"]},["responseHeaders","blocking"])}))}));const m=[];return A.keys(a).forEach((e=>{~m.indexOf(e)||"$$"===e.slice(0,2)||"slot"===e||console.warn(`<BestBuy> was created with unknown prop '${e}'`)})),e.$capture_state=()=>({__awaiter:r.mG,onMount:o.H3,decodeQueue:d,minutesSeconds:i,backgroundSelf:n,bestBuyDisplays:T,defaultSettings:G,extensionLog:u,initializeStore:l,messageProcessHandlers:I,sendMessageToContent:y,self:f,notificationSuccess:O,queues:M,setQueues:N,settings:U,successfulCart:g,$queues:c,$settings:p}),e.$inject_state=e=>{"notificationSuccess"in e&&(O=e.notificationSuccess),"queues"in e&&X(t(0,M=e.queues)),"setQueues"in e&&(N=e.setQueues),"settings"in e&&F(t(1,U=e.settings))},a&&"$$inject"in a&&e.$inject_state(a.$$inject),[M,U]}class F extends s.Mjb{constructor(e){super(e),(0,s.S1n)(this,e,S,X,s.N8,{}),(0,s.YyZ)("SvelteRegisterComponent",{component:this,tagName:"BestBuy",options:e,id:X.name})}}e&&e.hot;const E=F},48:(e,a,t)=>{new(t(770).Z)({target:document.body,props:{}})}},t={};function s(e){var r=t[e];if(void 0!==r)return r.exports;var o=t[e]={id:e,loaded:!1,exports:{}};return a[e](o,o.exports,s),o.loaded=!0,o.exports}s.m=a,e=[],s.O=(a,t,r,o)=>{if(!t){var d=1/0;for(G=0;G<e.length;G++){for(var[t,r,o]=e[G],i=!0,c=0;c<t.length;c++)(!1&o||d>=o)&&Object.keys(s.O).every((e=>s.O[e](t[c])))?t.splice(c--,1):(i=!1,o<d&&(d=o));if(i){e.splice(G--,1);var n=r();void 0!==n&&(a=n)}}return a}o=o||0;for(var G=e.length;G>0&&e[G-1][2]>o;G--)e[G]=e[G-1];e[G]=[t,r,o]},s.d=(e,a)=>{for(var t in a)s.o(a,t)&&!s.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:a[t]})},s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),s.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),s.j=563,(()=>{var e={563:0};s.O.j=a=>0===e[a];var a=(a,t)=>{var r,o,[d,i,c]=t,n=0;if(d.some((a=>0!==e[a]))){for(r in i)s.o(i,r)&&(s.m[r]=i[r]);if(c)var G=c(s)}for(a&&a(t);n<d.length;n++)o=d[n],s.o(e,o)&&e[o]&&e[o][0](),e[d[n]]=0;return s.O(G)},t=self.webpackChunkakitos_automated_utilities=self.webpackChunkakitos_automated_utilities||[];t.forEach(a.bind(null,0)),t.push=a.bind(null,t.push.bind(t))})();var r=s.O(void 0,[154],(()=>s(48)));r=s.O(r)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,